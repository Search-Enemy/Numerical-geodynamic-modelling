    % Solve Stokes-equ and Continuity-equ.
    for j=1:1:Nx1
        for i=1:1:Ny1
            % Define global indexes in algebraic space
            kvx=((j-1)*Ny1+i-1)*3+1; % Vx
            kvy=kvx+1; % Vy
            kpm=kvx+2; % P
            
            % Vx equation External points
            if(i==1 || i==Ny1 || j==1 || j==Nx || j==Nx1)
                % Boundary Condition
                % Ghost points.
                % 1*Vx=0
                if (j==Nx1)
                    coe(kvx,kvx)=1; % Left part
                    R(kvx)=0; % Right part
                end
                % Left boundary(prescribe vx)
                if (j==1 )
                    coe(kvx,kvx)=1; % Left part
                    R(kvx)=vxleft; % Right part
                end
                % Right boundary(prescribe vx)
                if (j==Nx)
                    coe(kvx,kvx)=1; % Left part
                    R(kvx)=vxright; % Right part
                end
                % Top boundary(free slip)
                if(i==1 && j>1 && j<Nx)
                    coe(kvx,kvx)=1; % Left part
                    coe(kvx,kvx+3)=bctop; % Left part
                    R(kvx)=0; % Right part
                end
                % Bottom boundary(free slip)
                if(i==Ny1 && j>1 && j<Nx)
                    coe(kvx,kvx)=1; % Left part
                    coe(kvx,kvx-3)=bcbottom; % Left part
                    R(kvx)=0; % Right part
                end
            else
                % Internal points: x-Stokes eq.
                % ETA*(d2Vx/dx^2+d2Vx/dy^2)-dP/dx=0
                %            Vx2
                %             |
                %        Vy1  |  Vy3
                %             |
                %     Vx1-P1-Vx3-P2-Vx5
                %             |
                %        Vy2  |  Vy4
                %             |
                %            Vx4
                %
                % Density gradients
                dRHOdx=(RHOVX(i,j+1)-RHOVX(i,j-1))/2/dx;
                dRHOdy=(RHOVX(i+1,j)-RHOVX(i-1,j))/2/dy;
                % Modify parameters
                ETAPMIU2 = dt*GGGP(i,j+1)*ETAPVP(i,j+1)/(GGGP(i,j+1)*dt+ETAPVP(i,j+1));
                ETAPMIU1 = dt*GGGP(i,j)*ETAPVP(i,j)/(GGGP(i,j)*dt+ETAPVP(i,j));                
                ETAMIU1 =  dt*GGG(i-1,j)*ETAVP(i-1,j)/(GGG(i-1,j)*dt+ETAVP(i-1,j));
                ETAMIU2 =  dt*GGG(i,j)*ETAVP(i,j)/(GGG(i,j)*dt+ETAVP(i,j));
                % Stress
                SXX2 = SXX0(i,j+1)*ETAPVP(i,j+1)/(GGGP(i,j+1)*dt+ETAPVP(i,j+1));
                SXX1 = SXX0(i,j)*ETAPVP(i,j)/(GGGP(i,j)*dt+ETAPVP(i,j));      
                SXY2 = SXY0(i,j)*ETAVP(i,j)/(GGG(i,j)*dt+ETAVP(i,j));
                SXY1 = SXY0(i-1,j)*ETAVP(i-1,j)/(GGG(i-1,j)*dt+ETAVP(i-1,j));
                % Left part
                coe(kvx,kvx-Ny1*3)=ETAPMIU1/dx^2  ; % Vx1(i,j-1)
                coe(kvx,kvx-3)=ETAMIU1/dy^2          ; % Vx2(i-1,j)
                coe(kvx,kvx)=-(ETAPMIU2+ETAPMIU1)/dx^2 ...
                               -(ETAMIU2+ ETAMIU1) /dy^2 - gx*dt*dRHOdx   - RHOVX(i,j)/dt; % Vx3(i,j)
                coe(kvx,kvx+3)=ETAMIU2/dy^2      ; % Vx4(i+1,j)
                coe(kvx,kvx+Ny1*3)=ETAPMIU2/dx^2    ; % Vx5(i,j+1)
                
                coe(kvx,kvy)      = -ETAMIU2/dy/dx +ETAPMIU1/dx/dy -dRHOdy*gx*dt/4  ;  % Vy2(i,j)
                coe(kvx,kvy+Ny1*3)= ETAMIU2/dy/dx -ETAPMIU2/dx/dy -dRHOdy*gx*dt/4   ;  % Vy4(i,j+1)
                coe(kvx,kvy-3)    = ETAMIU1/dx/dy  -ETAPMIU1/dx/dy  -dRHOdy*gx*dt/4  ;  % Vy1(i-1,j)
                coe(kvx,kvy+Ny1*3-3)= -ETAMIU1/dx/dy +ETAPMIU2/dx/dy-dRHOdy*gx*dt/4  ;  % Vy3(i-1,j+1)
                coe(kvx,kpm)=Kcont/dx; % P1(i,j)
                coe(kvx,kpm+Ny1*3)=-Kcont/dx; % P2(i,j+1)

                % Right part !!!
                R(kvx)=-RHOVX(i,j)*(gx + vx0(i,j)/dt) -(SXX2-SXX1) /dx...
                                       -(SXY2-SXY1)/dy ;
            end
            
            % Vy equation External points
            if(j==1 || j==Nx1 || i==1 || i==Ny || i==Ny1)
                % Boundary Condition
                % Ghost points.
                % 1*Vy=0
                if (i == Ny1)
                    coe(kvy,kvy)=1; % Left part
                    R(kvy)=0; % Right part
                end
                % Up boundary(prescribe v)
                if (i == 1)
                    coe(kvy,kvy)=1; % Left part
                    R(kvy)=vytop; % Right part
                end
                % Down boundary(prescribe v)
                if (i == Ny)
                    coe(kvy,kvy)=1; % Left part
                    R(kvy)=vybottom; % Right part
                end
                % Left boundary(free slip)
                if(j==1 && i>1 && i<Ny)
                    coe(kvy,kvy)=1; % Left part
                    coe(kvy,kvy+3*Ny1)=bcleft; % Left part
                    R(kvy)=0; % Right part
                end
                % Right boundary(free slip)
                if(j==Nx1 && i>1 && i<Ny)
                    coe(kvy,kvy)=1; % Left part
                    coe(kvy,kvy-3*Ny1)=bcright; % Left part
                    R(kvy)=0; % Right part
                end
            else
                % Internal points: y-Stokes eq.
                % ETA*(d2Vy/dx^2+d2Vy/dy^2)-dP/dy=-RHO*gy
                %            Vy2
                %             |
                %         Vx1 P1 Vx3
                %             |
                %     Vy1----Vy3----Vy5
                %             |
                %         Vx2 P2 Vx4
                %             |
                %            Vy4
                %
                % Viscosity points
                dRHOdx=(RHOVY(i,j+1)-RHOVY(i,j-1))/2/dx;
                dRHOdy=(RHOVY(i+1,j)-RHOVY(i-1,j))/2/dy;
                ETAPMIU2 = dt*GGGP(i+1,j)*ETAPVP(i+1,j)/(GGGP(i+1,j)*dt+ETAPVP(i+1,j));
                ETAPMIU1 = dt*GGGP(i,j)*ETAPVP(i,j)/(GGGP(i,j)*dt+ETAPVP(i,j));
                ETAMIU1  = dt*GGG(i,j-1)*ETAVP(i,j-1)/(GGG(i,j-1)*dt+ETAVP(i,j-1));
                ETAMIU2  = dt*GGG(i,j)*ETAVP(i,j)/(GGG(i,j)*dt+ETAVP(i,j));        
                SYY2 = -SXX0(i+1,j)*ETAPVP(i+1,j)/(GGGP(i+1,j)*dt+ETAPVP(i+1,j));
                SYY1 = -SXX0(i,j)*ETAPVP(i,j)/(GGGP(i,j)*dt+ETAPVP(i,j));      
                SYX2 = SXY0(i,j)*ETAVP(i,j)/(GGG(i,j)*dt+ETAVP(i,j));
                SYX1 = SXY0(i,j-1)*ETAVP(i,j-1)/(GGG(i,j-1)*dt+ETAVP(i,j-1));
                % Left part
                coe(kvy,kvy-Ny1*3)=ETAMIU1/dx^2    ; % Vy1(i,j-1)
                coe(kvy,kvy-3)=ETAPMIU1/dy^2    ; % Vy2(i-1,j)
                coe(kvy,kvy)=-ETAPMIU1/dy^2-ETAPMIU2/dy^2 ...
                             -ETAMIU2/dx^2-ETAMIU1/dx^2 - dRHOdy*gy*dt     - RHOVY(i,j)/dt; % Vy3(i,j)
                coe(kvy,kvy+3)=ETAPMIU2/dy^2   ; % Vy4(i+1,j)
                coe(kvy,kvy+Ny1*3)=ETAMIU2/dx^2   ; % Vy5(i,j+1)
                
                coe(kvy,kvx)= - ETAMIU2/dx/dy  + ETAPMIU1/dx/dy  -dRHOdx*gy*dt/4; %Vx3(i,j)
                coe(kvy,kvx+3)=  ETAMIU2/dx/dy  -ETAPMIU2/dx/dy  -dRHOdx*gy*dt/4; %Vx4(i+1,j)
                coe(kvy,kvx-Ny1*3)= ETAMIU1/dx/dy  -ETAPMIU1/dx/dy  -dRHOdx*gy*dt/4    ; %Vx1(i,j-1)
                coe(kvy,kvx+3-Ny1*3)= - ETAMIU1/dx/dy  +ETAPMIU2/dx/dy   -dRHOdx*gy*dt/4    ; %Vx2(i+1,j-1)
                coe(kvy,kpm)=Kcont/dy; % P1
                coe(kvy,kpm+3)=-Kcont/dy; % P2
                
                % Right part
                R(kvy)=-RHOVY(i,j)*(gy + vy0(i,j)/dt) - (SYY2-SYY1)/dy  - (SYX2-SYX1)/dx;
            end
            
            % P equation External points
            if(i==1 || j==1 || i==Ny1 || j==Nx1)
                % Boundary Condition
                % 1*P=0
                coe(kpm,kpm)=1; % Left part
                R(kpm)=0; % Right part  !!!
            else
                % Internal points: continuity eq.
                % dVx/dx+dVy/dy=0
                %            Vy1
                %             |
                %        Vx1--P--Vx2
                %             |
                %            Vy2
                %
                % Left part
                coe(kpm,kvx-Ny1*3)=-1/dx; % Vx1
                coe(kpm,kvx)=1/dx; % Vx2
                coe(kpm,kvy-3)=-1/dy; % Vy1
                coe(kpm,kvy)=1/dy; % Vy2
                coe(kpm,kpm) = Kcont*BEITAP(i,j)/dt;
                % Right part
                R(kpm)=P0(i,j)*BEITAP(i,j)/dt  + ALPHAP(i,j)*(T1(i,j)-T0(i,j))/dt;
            end
        end
    end
